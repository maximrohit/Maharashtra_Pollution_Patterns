clusters_,NO2_Median,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",NO2_Median,.mean())
clusters_,RSPM_PM10_Median,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",RSPM_PM10_Median,.mean())
clusters_,SO2_Median,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SO2_Median,.mean())
clusters_,SPM_Median,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SPM_Median,.mean())
clusters_,Median_SO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Median_SO2_MOM_diff,.mean())
clusters_,Median_NO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Median_NO2_MOM_diff,.mean())
clusters_,Median_RSPM_PM10_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Median_RSPM_PM10_MOM_diff,.mean())
clusters_,Median_SPM_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Median_SPM_MOM_diff,.mean())
clusters_,NO2_P10,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",NO2_P10,.mean())
clusters_,RSPM_PM10_P10,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",RSPM_PM10_P10,.mean())
clusters_,SO2_P10,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SO2_P10,.mean())
clusters_,SPM_P10,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SPM_P10,.mean())
clusters_,P10_NO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P10_NO2_MOM_diff,.mean())
clusters_,P10_SO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P10_SO2_MOM_diff,.mean())
clusters_,P10_RSPM_PM10_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P10_RSPM_PM10_MOM_diff,.mean())
clusters_,P10_SPM_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P10_SPM_MOM_diff,.mean())
clusters_,NO2_P90,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",NO2_P90,.mean())
clusters_,RSPM_PM10_P90,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",RSPM_PM10_P90,.mean())
clusters_,SO2_P90,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SO2_P90,.mean())
clusters_,SPM_P90,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",SPM_P90,.mean())
clusters_,P90_NO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P90_NO2_MOM_diff,.mean())
clusters_,P90_SO2_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P90_SO2_MOM_diff,.mean())
clusters_,P90_RSPM_PM10_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P90_RSPM_PM10_MOM_diff,.mean())
clusters_,P90_SPM_MOM_diff,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",P90_SPM_MOM_diff,.mean())
clusters_,Male,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Male,.mean())
clusters_,Female,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Female,.mean())
clusters_,Total,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Total,.mean())
clusters_,Population_Density,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Population_Density,.mean())
clusters_,Sex_Ratio,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Sex_Ratio,.mean())
clusters_,Literacy_Rate,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Literacy_Rate,.mean())
clusters_,elevation_in_mtrs,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",elevation_in_mtrs,.mean())
clusters_,lowlatitude,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",lowlatitude,.mean())
clusters_,highlatitude,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",highlatitude,.mean())
clusters_,lowlongitude,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",lowlongitude,.mean())
clusters_,highlongitude,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",highlongitude,.mean())
clusters_,forestarea_in_thhector,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",forestarea_in_thhector,.mean())
clusters_,forestarea_in_percentage,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",forestarea_in_percentage,.mean())
clusters_,overall_area_thhector,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",overall_area_thhector,.mean())
clusters_,non_forest_area,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",non_forest_area,.mean())
clusters_,non_forest_area_percentage,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",non_forest_area_percentage,.mean())
clusters_,Non_Agriculturea_Land,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Non_Agriculturea_Land,.mean())
clusters_,Non_Agriculturea_Land_percentage,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Non_Agriculturea_Land_percentage,.mean())
clusters_,Cultivablea_Barrena_land,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Cultivablea_Barrena_land,.mean())
clusters_,Cultivablea_Barrena_land_percentage,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Cultivablea_Barrena_land_percentage,.mean())
clusters_,National_Highway_km,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",National_Highway_km,.mean())
clusters_,State_Highway_km,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",State_Highway_km,.mean())
clusters_,Main_District_Highway_km,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Main_District_Highway_km,.mean())
clusters_,Other_district_Rural_Roads_km,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Other_district_Rural_Roads_km,.mean())
clusters_,Length_of_rail_line_km,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Length_of_rail_line_km,.mean())
clusters_,Industrial_Areas_hectare,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Industrial_Areas_hectare,.mean())
clusters_,micro_industries_manu,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",micro_industries_manu,.mean())
clusters_,small_industries_manu,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",small_industries_manu,.mean())
clusters_,medium_industries_manu,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",medium_industries_manu,.mean())
clusters_,large_industries_manu,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",large_industries_manu,.mean())
clusters_,micro_industries_services,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",micro_industries_services,.mean())
clusters_,small_industries_services,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",small_industries_services,.mean())
clusters_,medium_industries_services,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",medium_industries_services,.mean())
clusters_,large_industries_services,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",large_industries_services,.mean())
clusters_,micrototal,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",micrototal,.mean())
clusters_,smalltotal,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",smalltotal,.mean())
clusters_,mediumtotal,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",mediumtotal,.mean())
clusters_,largetotal,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",largetotal,.mean())
clusters_,manu_total,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",manu_total,.mean())
clusters_,service_total,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",service_total,.mean())
clusters_,industrytotal,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",industrytotal,.mean())
clusters_,rainfall,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",rainfall,.mean())
clusters_,total_road,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",total_road,.mean())
clusters_,National_Highway_per,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",National_Highway_per,.mean())
clusters_,State_Highway_per,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",State_Highway_per,.mean())
clusters_,Main_District_Highway_per,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Main_District_Highway_per,.mean())
clusters_,Other_district_Rural_Roads_per,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",Other_district_Rural_Roads_per,.mean())
clusters_,indus_by_overall,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",indus_by_overall,.mean())
clusters_,indus_by_forest,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",indus_by_forest,.mean())
clusters_,indus_by_nonforest,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",indus_by_nonforest,.mean())
clusters_,RainPerArea,=,"pd.DataFrame(base_cluster.groupby([""ClusterId""]).",RainPerArea,.mean())
